<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<version>${version}</version>
	<packaging>php</packaging>

	<name>${magentoModuleName} Module</name>
	<description>${magentoModuleName} does alot of nice things..</description>
	<inceptionYear>2011</inceptionYear>

	<properties>
		<!-- don't change these unless you know what you are doing -->
		<magento.build.directory>${project.parent.parent.build.directory}</magento.build.directory>
		<php.dependencies.target.dir>${magento.build.directory}/${magento.test.artifact.group.id}-${magento.test.artifact.id}-${magento.test.artifact.version}</php.dependencies.target.dir>
		<php.test.dependencies.target.dir>${php.dependencies.target.dir}</php.test.dependencies.target.dir>
	</properties>

	<!-- build lifecycle -->
	<build>
		<plugins>
			<plugin>
				<groupId>de.bbe-consulting.maven.plugin</groupId>
				<artifactId>magento-maven-plugin</artifactId>
				<configuration>
					<!-- manual symlink configuration -->
					<!-- <symLinks>
						<symLink>app/design/adminhtml/default/default/template/${magentoModuleNameLowerCase}</symLink>
						<symLink>app/locale/en_US/${magentoNameSpace}_${magentoModuleName}.csv</symLink>
						<symLink>app/code/${magentoModuleType}/${magentoNameSpace}/${magentoModuleName}</symLink>
						<symLink>app/etc/modules/${magentoNameSpace}_${magentoModuleName}.xml</symLink>
						<symLink>app/design/adminhtml/default/default/layout/${magentoModuleNameLowerCase}.xml</symLink>
					</symLinks>  -->
				</configuration>
				<executions>
					<execution>
						<id>setup-magento-test</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>setup-test</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-magento-test</id>
						<phase>validate</phase>
						<goals>
							<goal>pre-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.phpmaven</groupId>
				<artifactId>maven-php-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<!-- true = disable code validating -->
					<ignoreValidate>${ignoreValidate}</ignoreValidate>
					<!-- true = disable all tests -->
					<skipTests>${skipTests}</skipTests>
					<!-- some files simply won't validate, afaik it is only needed for mysql setup scripts and api classes -->
					<excludeFromValidation>
						<param>app/code/${magentoModuleType}/${magentoNameSpace}/${magentoModuleName}/sql/${magentoModuleNameLowerCase}_setup/mysql4-install-*.php</param>
					</excludeFromValidation>
					<!-- don't run selenium tests in test phase -->
					<excludes>
						<param>**/Selenium/**</param>
					</excludes>
					<!-- only run the unit suite class -->
					<testPostfix>Tests</testPostfix>
				</configuration>
				<executions>
					<execution>
						<id>sel-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<!-- overide excludes -->
							<excludes><param>foobar</param></excludes>
							<includes>
								<param>**/Selenium/**</param>
							</includes>
							<testPostfix>Test</testPostfix>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.phpmaven</groupId>
				<artifactId>maven-php-phpunit</artifactId>
				<configuration>
					<executableConfig>
						<!-- true = log all php output -->
						<logPhpOutput>true</logPhpOutput>
						<!-- set additional php parameters -->
						<additionalPhpParameters>-d auto_prepend_file=magento_bootstrap.php</additionalPhpParameters>
					</executableConfig>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.phpmaven</groupId>
				<artifactId>maven-php-project</artifactId>
				<configuration>
					<dependenciesDir>${php.dependencies.target.dir}</dependenciesDir>
					<testDependenciesDir>${php.dependencies.target.dir}</testDependenciesDir>
				</configuration>
			</plugin>

			<!-- start selenium server -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- makes sure all source files have the same license, edit license.header to your needs -->
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<configuration>
					<header>${project.parent.parent.basedir}/license.header</header>
					<includes>
						<!-- php -->
						<include>**/*.php</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>format</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
					<execution>
						<id>check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- use the new 3.0 site plugin, but with 2.x style configuration for compat. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<inherited>true</inherited>
			</plugin>

			<!-- extension assembly -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>${basedir}/src/main/assembly/config.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>bundle-project-sources</id>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- only used to preserve evtl. symlinking of the build dir -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<excludeDefaultDirectories>true</excludeDefaultDirectories>
					<filesets>
						<fileset>
							<directory>${project.build.directory}</directory>
							<includes>
								<include>**/*</include>
							</includes>
						</fileset>
						<!-- also clean project root (test instances)-->
						<fileset>
							<directory>${project.parent.parent.build.directory}</directory>
							<includes>
								<include>**/*</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
		<!-- needed by sonar -->
		<sourceDirectory>${basedir}/src/main/php</sourceDirectory>
		<testSourceDirectory>${basedir}/src/test/php</testSourceDirectory>
		<!-- enable resource filtering -->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	<reporting>
		<plugins>
			<!-- unit test reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.10</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- php code quality reports, php documentor -->
			<plugin>
				<groupId>org.phpmaven</groupId>
				<artifactId>maven-php-plugin</artifactId>
				<version>${php.maven.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>phpdocumentor</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
